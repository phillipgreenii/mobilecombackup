{
  "$schema": "https://raw.githubusercontent.com/jetify-com/devbox/0.14.2/.schema/devbox.schema.json",
  "packages": [
    "deno@2",
    "go@1.24",
    "golangci-lint@latest",
    "jq@latest",
    "viu@latest",
    "yq@latest",
    "claude-code@1.0.72"
  ],
  "shell": {
    "init_hook": [
      "go mod tidy",
      "echo 'ðŸ“‹ Setting up development environment...'",
      "if [ -f scripts/install-hooks.sh ]; then bash scripts/install-hooks.sh; fi"
    ],
    "scripts": {
      "list-issues": [
        "ls -1 issues/{active,ready,backlog}"
      ],
      "formatter": [
        "go fmt ./..."
      ],
      "builder": [
        "go build -v ./..."
      ],
      "tests": [
        "go test -v -covermode=set ./..."
      ],
      "linter": [
        "golangci-lint run"
      ],
      "linter-fix": [
        "golangci-lint run --fix"
      ],
      "build-cli": [
        "sh -c 'VERSION=$(bash scripts/build-version.sh) && go build -ldflags \"-X main.Version=$VERSION\" -o mobilecombackup github.com/phillipgreen/mobilecombackup/cmd/mobilecombackup'"
      ],
      "validate-version": [
        "bash scripts/validate-version.sh"
      ],
      "ci": [
        "devbox run formatter",
        "devbox run tests",
        "devbox run linter",
        "devbox run build-cli"
      ],
      "install-hooks": [
        "bash scripts/install-hooks.sh"
      ],
      "test-hooks": [
        "echo 'ðŸ§ª Testing pre-commit hooks...'",
        ".githooks/pre-commit"
      ],
      "coverage": [
        "echo 'ðŸ“Š Running test coverage analysis...'",
        "go test -coverprofile=coverage.out ./...",
        "go tool cover -html=coverage.out -o coverage.html",
        "echo 'âœ… Coverage report generated: coverage.html'"
      ],
      "coverage-summary": [
        "echo 'ðŸ“ˆ Test Coverage Summary:'",
        "go test -cover ./... | grep -E 'coverage|ok|FAIL' | sort"
      ]
    }
  }
}
